//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference
// Implementation, v2.3.0
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2021.08.06 at 04:43:12 PM BST
//

package org.treblereel.gwt.xml.mapper.client.tests.pmml.model.api;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;

/**
 * Java class for LINK-FUNCTION.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <p>
 *
 * <pre>
 * &lt;simpleType name="LINK-FUNCTION"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="cloglog"/&gt;
 *     &lt;enumeration value="identity"/&gt;
 *     &lt;enumeration value="log"/&gt;
 *     &lt;enumeration value="logc"/&gt;
 *     &lt;enumeration value="logit"/&gt;
 *     &lt;enumeration value="loglog"/&gt;
 *     &lt;enumeration value="negbin"/&gt;
 *     &lt;enumeration value="oddspower"/&gt;
 *     &lt;enumeration value="power"/&gt;
 *     &lt;enumeration value="probit"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 */
@XmlType(name = "LINK-FUNCTION")
@XmlEnum
public enum LINKFUNCTION {
  @XmlEnumValue("cloglog")
  CLOGLOG("cloglog"),
  @XmlEnumValue("identity")
  IDENTITY("identity"),
  @XmlEnumValue("log")
  LOG("log"),
  @XmlEnumValue("logc")
  LOGC("logc"),
  @XmlEnumValue("logit")
  LOGIT("logit"),
  @XmlEnumValue("loglog")
  LOGLOG("loglog"),
  @XmlEnumValue("negbin")
  NEGBIN("negbin"),
  @XmlEnumValue("oddspower")
  ODDSPOWER("oddspower"),
  @XmlEnumValue("power")
  POWER("power"),
  @XmlEnumValue("probit")
  PROBIT("probit");
  private final String value;

  LINKFUNCTION(String v) {
    value = v;
  }

  public String value() {
    return value;
  }

  public static LINKFUNCTION fromValue(String v) {
    for (LINKFUNCTION c : LINKFUNCTION.values()) {
      if (c.value.equals(v)) {
        return c;
      }
    }
    throw new IllegalArgumentException(v);
  }
}
